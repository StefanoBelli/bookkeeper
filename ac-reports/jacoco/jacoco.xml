<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Apache BookKeeper :: Common :: Allocator"><sessioninfo id="DESKTOP-AJ6B8Q5-281546f" start="1716735621060" dump="1716735621701"/><sessioninfo id="DESKTOP-AJ6B8Q5-491d9b68" start="1716735622360" dump="1716735623337"/><package name="org/apache/bookkeeper/common/allocator/impl"><class name="org/apache/bookkeeper/common/allocator/impl/ByteBufAllocatorBuilderImpl" sourcefilename="ByteBufAllocatorBuilderImpl.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/apache/bookkeeper/common/allocator/ByteBufAllocatorWithOomHandler;" line="43"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pooledAllocator" desc="(Lio/netty/buffer/ByteBufAllocator;)Lorg/apache/bookkeeper/common/allocator/ByteBufAllocatorBuilder;" line="49"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unpooledAllocator" desc="(Lio/netty/buffer/ByteBufAllocator;)Lorg/apache/bookkeeper/common/allocator/ByteBufAllocatorBuilder;" line="55"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="poolingPolicy" desc="(Lorg/apache/bookkeeper/common/allocator/PoolingPolicy;)Lorg/apache/bookkeeper/common/allocator/ByteBufAllocatorBuilder;" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="poolingConcurrency" desc="(I)Lorg/apache/bookkeeper/common/allocator/ByteBufAllocatorBuilder;" line="67"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="outOfMemoryPolicy" desc="(Lorg/apache/bookkeeper/common/allocator/OutOfMemoryPolicy;)Lorg/apache/bookkeeper/common/allocator/ByteBufAllocatorBuilder;" line="73"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outOfMemoryListener" desc="(Ljava/util/function/Consumer;)Lorg/apache/bookkeeper/common/allocator/ByteBufAllocatorBuilder;" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="leakDetectionPolicy" desc="(Lorg/apache/bookkeeper/common/allocator/LeakDetectionPolicy;)Lorg/apache/bookkeeper/common/allocator/ByteBufAllocatorBuilder;" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="65"/><counter type="LINE" missed="6" covered="17"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/bookkeeper/common/allocator/impl/ByteBufAllocatorImpl" sourcefilename="ByteBufAllocatorImpl.java"><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBufAllocator;Lio/netty/buffer/ByteBufAllocator;Lorg/apache/bookkeeper/common/allocator/PoolingPolicy;ILorg/apache/bookkeeper/common/allocator/OutOfMemoryPolicy;Ljava/util/function/Consumer;Lorg/apache/bookkeeper/common/allocator/LeakDetectionPolicy;)V" line="56"><counter type="INSTRUCTION" missed="23" covered="72"/><counter type="BRANCH" missed="5" covered="14"/><counter type="LINE" missed="8" covered="25"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buffer" desc="()Lio/netty/buffer/ByteBuf;" line="123"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buffer" desc="(I)Lio/netty/buffer/ByteBuf;" line="128"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buffer" desc="(II)Lio/netty/buffer/ByteBuf;" line="133"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newHeapBuffer" desc="(II)Lio/netty/buffer/ByteBuf;" line="145"><counter type="INSTRUCTION" missed="7" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newDirectBuffer" desc="(II)Lio/netty/buffer/ByteBuf;" line="157"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newDirectBuffer" desc="(IIZ)Lio/netty/buffer/ByteBuf;" line="161"><counter type="INSTRUCTION" missed="33" covered="16"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="11" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDirectBufferPooled" desc="()Z" line="192"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOomHandler" desc="(Ljava/util/function/Consumer;)V" line="197"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Ljava/lang/OutOfMemoryError;)V" line="62"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="72" covered="148"/><counter type="BRANCH" missed="10" covered="23"/><counter type="LINE" missed="26" covered="39"/><counter type="COMPLEXITY" missed="10" covered="19"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ByteBufAllocatorBuilderImpl.java"><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="18" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="65"/><counter type="LINE" missed="6" covered="17"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ByteBufAllocatorImpl.java"><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="2"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="2"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="2"/><line nr="69" mi="0" ci="2" mb="1" cb="1"/><line nr="70" mi="0" ci="3" mb="1" cb="1"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="6" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="2" ci="5" mb="1" cb="1"/><line nr="96" mi="0" ci="5" mb="1" cb="4"/><line nr="98" mi="0" ci="3" mb="1" cb="1"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="2"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="7" mb="0" cb="2"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="2"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="6" ci="0" mb="4" cb="0"/><line nr="167" mi="6" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="169" mi="4" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="1" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="0" ci="11" mb="1" cb="3"/><line nr="197" mi="3" ci="0" mb="0" cb="0"/><line nr="198" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="72" covered="148"/><counter type="BRANCH" missed="10" covered="23"/><counter type="LINE" missed="26" covered="39"/><counter type="COMPLEXITY" missed="10" covered="19"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="87" covered="213"/><counter type="BRANCH" missed="10" covered="23"/><counter type="LINE" missed="32" covered="56"/><counter type="COMPLEXITY" missed="13" covered="25"/><counter type="METHOD" missed="5" covered="15"/><counter type="CLASS" missed="0" covered="2"/></package><package name="org/apache/bookkeeper/common/allocator"><class name="org/apache/bookkeeper/common/allocator/OutOfMemoryPolicy" sourcefilename="OutOfMemoryPolicy.java"><method name="&lt;clinit&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/bookkeeper/common/allocator/PoolingPolicy" sourcefilename="PoolingPolicy.java"><method name="&lt;clinit&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/bookkeeper/common/allocator/LeakDetectionPolicy" sourcefilename="LeakDetectionPolicy.java"><method name="parseLevel" desc="(Ljava/lang/String;)Lorg/apache/bookkeeper/common/allocator/LeakDetectionPolicy;" line="52"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="30"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/bookkeeper/common/allocator/ByteBufAllocatorWithOomHandler" sourcefilename="ByteBufAllocatorWithOomHandler.java"/><class name="org/apache/bookkeeper/common/allocator/ByteBufAllocatorBuilder" sourcefilename="ByteBufAllocatorBuilder.java"><method name="create" desc="()Lorg/apache/bookkeeper/common/allocator/ByteBufAllocatorBuilder;" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="LeakDetectionPolicy.java"><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="16" ci="0" mb="2" cb="0"/><line nr="54" mi="5" ci="0" mb="2" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="30"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ByteBufAllocatorBuilder.java"><line nr="34" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ByteBufAllocatorWithOomHandler.java"/><sourcefile name="PoolingPolicy.java"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OutOfMemoryPolicy.java"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="34" covered="64"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="12"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="4"/></package><counter type="INSTRUCTION" missed="121" covered="277"/><counter type="BRANCH" missed="14" covered="23"/><counter type="LINE" missed="39" covered="68"/><counter type="COMPLEXITY" missed="16" covered="29"/><counter type="METHOD" missed="6" covered="19"/><counter type="CLASS" missed="0" covered="6"/></report>